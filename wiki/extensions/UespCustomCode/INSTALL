==Updating extension to 0.7==
Basically all of the UespCustomCode files were altered for version 0.7 (and one new file was added,
namely SpecialPreferences.php).  Furthermore, all of the files need to updated simultaneously.  So
it's best to just do
  cp -f /home/nephele/edits/UespCustomCode/*.php /home/uesp/w/extensions/UespCustomCode/

The mediawiki files in mw10_modified have also all been modified, but the changes there are somewhat
cosmetic -- the old files will continue to work and most of the changes do not add new functionality.

The only mediawiki files that need to copied to w/includes are
   SearchUpdate.php  (This includes a new bug fix)
   Skin.php          (This adds a MW1.14 feature into the MW1.10 code)

==Installation==
These are the instructions for converting UESP from its current configuration (with multiple code
customizations) to using this extension.

It should be possible to make these changes on content1 and content2 independently (i.e., fully
install the extension on content1, test content1, then fully instally on content2).

The modified versions of any core mediawiki 1.10 files can be found in the mw10_modified subdirectory.

#1 Move the UespCustomCode directory to $IP/extensions/UespCustomCode
   There are a couple of subdirectories, so it might be easiest to untar the 'ucc.tar' tarfile 
   located at /home/nephele/edits/ucc.tar
   * changes that take effect: none (php isn't reading the extension yet)

#2 Run $IP/extensions/UespCustomCode/UespMinifyFiles.php
   Needs to be done from the command line (e.g., type "php UespMinifyFiles.php"), and by a user who has
   permission to write to directories such as $IP/skins/monobook
   A list of css and js files will be minified (summary information provided on screen); some customizations are
   appended to the default mediawiki files.
   This takes a while (read the file for why), but you can leave it running and move on to the other tasks.
   * changes that take effect: unnoticeable (until now-redundant code is deleted from the site's MediaWiki:Common.css, etc.
     files, or until site gets overloaded and stops serving out the MediaWiki files)

#3 Update $IP/includes/Wiki.php
   Updating this single file before the rest of the extension is enabled will prevent some possible strangeness
   with the search functions (otherwise, there's an odd mixture of both old code and new extension code being
   used simultaneously)
   * changes that take effect:
   ** None.  The only code change won't take effect until the extension is activated.
             (Logs may include some warnings about 'undefined constant UESP_CUSTOM_CODE_ACTIVE', but the warnings
              are harmless)

#4 Add extension to $IP/LocalSettings.php
   This is where real changes start to happen
   Only the first of the following changes is required for the sake of this extension.  The others are
   just changes to LocalSettings that I think would be _very_ useful, and might as well be done at the same time.

/*  Start of code changes */
// Add (anywhere in the list of extension additions)
require_once( "$IP/extensions/UespCustomCode/UespCustomCode.php" );

// Modify existing lines, found in various places within file
$wgLogo             = "$wgScriptPath/extensions/UespCustomCode/files/UespLogo.jpg";  // truly retire the old site logo, even when the site slows down
$wgGroupPermissions['patroller']['skipcaptcha'] = true;              // you had a typo: 'captcha' not 'catpcha' ;)
$wgAutoConfirmAge = 3600*24*3;                                       // this is what everybody believes is the existing setting (3 days, not just 1 day)

/* End of code changes */

   * changes that take effect:
   ** New magic words (refresh Shivering:Sandbox, and see whether all of the red links are replaced by the expected text)
   ** Search function updated (Shadowkey added to namespace list; "Search Titles Only" option added; searches are far more
      efficient, although most features are the same as previously.  The sidebar has not yet changed, so all searches are
      still by default not titles-only searches)
   ** Updates to several special pages (Lonelypages, Wantedpages, but the updates shouldn't have any visible impact on pages)

#4 Update the various core mediawiki files that need updating

   If you're feeling brave/trusting, you can just copy all of the files in the mw10_modified subdirectory to their new
   locations in a single step.  If you'd prefer a more incremental approach, however, you can move the files one or
   two at a time in the following order:

#4a Update $IP/includes/Skin.php then $IP/skins/Monobook.php
    * changes that take effect:
    ** New skin on all wiki pages (only visible change should be the search box, where the "?" button has been replaced
       by a "More options" button; hidden settings will make sidebar searches now default to titles-only searches)

#4c Update $IP/includes/Parser.php, $IP/includes/Sanitizer.php
    order doesn't particularly matter at this point
    * changes that take effect:
    ** updated transformation of [[Link]] to [[Namespace:Link|Link]] (but should work exactly the same as it did before)
    ** updated HTML code sanitizing (but should work exactly the same as it did before)

#4d Restore original versions of SpecialSearch.php, SearchEngine.php, SearchMySQL.php
    The original code for these files can be found in /home/nephele/edits/mw10; they all go into $IP/includes
    all of these changes should be essentially invisible (although worth doing at some point, since otherwise some
    processing may be getting done twice)

#5 You're done!
   But in case you're wondering why so many core mediawiki files are still non-vanilla, here's a summary of what's going
   on with all of the other files:
   * Image.php : by MW1.14, image processing has been completely revamped and this file is completely obsolete.
   ** Until Image.php is obsoleted by the next upgrade, we need to keep this bug fix.
   ** I've done some tests with the new mediawiki version and it seems that the bugs we experienced a long time
      ago have been fixed (even with UESP's image settings, such as wgHashed* = false).  In particular, purging an
      image works, and thumbnails do get regenerated when a new version of an image is uploaded.  So I don't think we
      need to maintain this code tweak after the next upgrade.
   ** In other words, when Image.php disappears following an upgrade, forget about our tweaks to Image.php

   * Most Special*.php files, plus Namespace.php: all changes related to "Namespace::isContentQuery" were to fix a bug
     that is officially listed as a bug for the mediawiki code.
   ** I've submitted a patch to bugzilla in order to get this bug fixed properly in the core mediawiki code, eliminating
      the need for UESP to custom-fix the bug.  I'm hoping that I can get this set of fixes incorporated into the mediawiki
      code by MW1.16.  The following comments assume that this will be possible; if it takes longer, then I'll have to 
      figure out what to do on UESP in the meantime.
   ** Until an upgrade makes these tweaks obsolete, we need to keep the customized versions of the files.
   ** If you don't upgrade until MW1.16 or later, the changes to these files (or an equivalent to these changes) will
      all automatically appear in the next round of mediawiki files.  No custom tweaking of the files necessary.
   ** If you upgrade to MW1.14, let me know and I'll scrounge up a patch file that will take care of the necessary
      changes to these files.

   * SpecialMostcategories: by MW1.14, mediawiki code includes some of UESP's customizations
   ** UESP's customizations include changes to the formatResult function _and_ namespace-related changes (see above
      comments about Namespace::isContentQuery).
   ** For now, the customized version of this file should be left in place
   ** In MW1.16, we'll be able to simply use the vanilla version of this file
   ** In MW1.14, the formatResult tweaks are no longer needed, but the namespace-related changes are.  I'll provide a
      patch that updates the vanilla version of this file, if we upgrade to 1.14.

   * SpecialNewpages: by MW1.14, mediawiki code obsoletes some of UESP's customizations
   ** UESP's customizations include changes to the namespace-selection features _and_ namespace-related changes (see above
      comments about Namespace::isContentQuery).  The namespace-selection code that I wrote was a real hack on this
      code; mediawiki has now introduced a far superior set of code modifications.
   ** For now, the customized version of this file should be left in place
   ** In MW1.16, we'll be able to simply use the vanilla version of this file
   ** In MW1.14, the namespace-selection tweaks are no longer needed, but the isContentQuery-related changes are.  I'll provide a
      patch that updates the vanilla version of this file, if we upgrade to 1.14.



==Updating Mediawiki to 1.14==
Before starting the upgrade, there a couple of issues that probably should be taken into account:
* Backing up all images before starting is more important than usual with this upgrade, because image/file
  handling is radically changed.
* Nearly half of the core code has been reorganized between 1.10 and 1.14.  Therefore, it's probably best to
  ''not'' unpack the 1.14 tarball into the existing directories, but instead to unpack 1.14 into a clean set
  of directories, then move the new clean directories into place.  Otherwise you'll end up with countless
  out-of-date files in the includes directory, which are no longer being used and are only going to cause
  confusion.

#1 Run $IP/extensions/UespCustomCode/UespMinifyFiles.php
   Before running this script, make sure there are no ".orig" files from previous MW versions in the directories
   (i.e., it's best to run this script on a clean version of mediawiki)
   This will take care of optimziations and additions to css/js files

#2 Modify the necessary core mediawiki files.  There are two possible ways to do this
   a) manually copy all of the php files in mw14_modified into the correct locations, or else
   b) use the mw14_modified/patch_all.diff file to patch all the files.  From the w/ directory,
      type:
          patch -p0 < patch_all.diff

   I'd recommend option (b), but I included a full set of modified files in case you wanted to double-check
   exactly what the files are supposed to look like

#3 (optional) Add some new configuration settings to LocalSettings.php
   In particular, I'd recommend adding the following line:

$wgExpensiveParserFunctionLimit = 500;

   This is a new parameter that limits the number of times certain "expensive" parser functions can be
   called within a single article -- most notably the #ifexist parser function.  The default value for
   this new parameter is 100, but many other wikis have had to increase the value
   * Wikipedia uses a value of 500: http://en.wikipedia.org/wiki/Wikipedia:Template_limits#Expensive_parser_function_calls
   * Memory alpha uses 300 and still has problems: http://memory-alpha.org/en/wiki/Category_talk:Pages_with_too_many_expensive_parser_function_calls; everquest uses 200 and still has problems; http://eq2.wikia.com/wiki/Talk:Admins/Archive_5#Parser-function_using_templates...)
   * Everquest uses 200 and still has problems: http://eq2.wikia.com/wiki/Talk:Admins/Archive_5#Parser-function_using_templates...)
   Perhaps even more importantly, I'm certain we have articles that have more than 100 #ifexist calls.
   Note that it's not that #ifexist has become any more CPU-intensive with the upgrade; it's just that now
   there's a way of tracking and limiting its use.

   There are some other settings we may want to take advantage of, but ExpensiveParser is the only new
   setting that seems likely to cause any immediate problems/loss of functionality upon upgrade.



==Status of Mediawiki Core Files==
This is a list of all core mediawiki files that have been altered for UespCustomCode and a summary of where
mediawiki currently stands in terms of incorporating changes that eliminate the need for UESP to continue
customizing these files (OK meaning that UESP will no longer need to customize the file)
Wiki.php                    OK as of MW1.14
Skin.php                    OK as of MW1.14
Image.php                   OK as of r49848 (will be in MW1.16 when it's released)

Namespace.php               semi-OK as of r49951 (a patch has been committed, but it's a patch to
                            a branch that is revamping the special pages; patch won't make it to trunk until
                            that branch is merged back in)
Special*.php                same as Namespace.php
SearchUpdate.php            in progress (patch has been submitted, but not yet commited to MW trunk)

MonoBook.php                x (I may eventually submit a patch to MediaWiki that would make this file OK)
Parser.php                  x (two changes here are likely to be permanently needed; a patch has been submitted for other
                               changes needed by MetaTemplate)
Sanitizer.php               x


